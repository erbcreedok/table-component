try {
    timeout(time: 25, unit: 'MINUTES') {
        properties([
            parameters([
                string(name: 'BRANCH', defaultValue: 'master', description: 'Branch')
            ])
        ])
        node('jenkins-node14') {
            container('npm') {
                env.SUPER_VERSION = ''
                stage("Checkout") {
                    cleanWs deleteDirs: true, notFailBuild: true
                    res_branch = env.GERRIT_BRANCH ? env.GERRIT_BRANCH : env.BRANCH
                    echo res_branch
                    git url: 'https://auto_epm-dce_ci@gerrit.delivery.epam.com/a/table-component', branch: res_branch, credentialsId: 'auto-epm-dce-ci-gerrit'
                    }
                withNPM(npmrcConfig:'npm-dce') {
                    stage('Preparation') {
                        sh "npm config set userconfig $WORKSPACE/.npmrc"
                        sh "npm run ci_stage1"
                        if(res_branch == 'qa'){
                            sh "npm run version:init"
                            sh "npm run version:alpha"
                        }
                        version = sh returnStdout: true, script: 'node -pe "require(\'./package.json\').version" | tr -d \'\\n\''
                        env.VERSION = version
                    }
                    stage('Build') {
                        sh "npm run ci_stage2"
                        sh "cp -r ./web_build ./core-env/core_nginx/"
                    }
                }
            }
            container('docker') {
                stage('Publish') {
                    sh """
                        docker build -t harbor.delivery.epam.com/spectrum/table_component:${VERSION} ./core-env/core_nginx && \
                        docker push harbor.delivery.epam.com/spectrum/table_component:${VERSION}
                    """
                }
            }
        }
    }
}
catch (err) {
    echo "in catch block"
    echo "Caught: ${err}"
    currentBuild.result = 'FAILURE'
    throw err
}
